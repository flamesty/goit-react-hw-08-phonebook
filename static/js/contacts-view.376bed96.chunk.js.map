{"version":3,"sources":["utils/motionVar.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","views/ContactsView/ContactsView.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","views/ContactsView/ContactsView.jsx"],"names":["variants","initial","scale","animate","exit","transition","ease","duration","module","exports","fetchContacts","dispatch","fetchContactsRequest","axios","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","response","status","toast","info","addContact","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","state","contacts","items","getLoading","isLoading","getError","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactList","useDispatch","visibleContacts","useSelector","contactsSelectors","length","ul","className","s","list","map","id","li","item","IconButton","color","type","onClick","contactsOperations","p","ContactForm","useState","setName","setNumber","handleChange","e","target","value","resetInput","form","onSubmit","preventDefault","find","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","label","input","onChange","placeholder","format","mask","pattern","Button","variant","size","LoaderComponent","Filter","contactsActions","filterContact","ContactsView","useEffect","wrapper"],"mappings":"gJAAA,kCAAO,IAAMA,EAAW,CACtBC,QAAS,CAAEC,MAAO,GAClBC,QAAS,CAAED,MAAO,GAClBE,KAAM,CAAEF,MAAO,GACfG,WAAY,CAAEC,KAAM,UAAWC,SAAU,M,oBCH3CC,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,4B,oBCA3FD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,IAAM,2B,oBCA/HD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,oBCAxDD,EAAOC,QAAU,CAAC,QAAU,gC,wgBCafC,EAAgB,kBAAM,SAAAC,GACjCA,EAASC,kCAETC,IACGC,IAAI,aACJC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcL,EAASM,+BAAqBD,OACjDE,OAAM,SAAAC,GACLR,EAASS,6BAAmBD,IAEE,MAA1BA,EAAME,SAASC,OACjBC,IAAMC,KAAK,uCACwB,MAA1BL,EAAME,SAASC,OACxBC,IAAMJ,MAAM,yCAEZI,IAAMJ,MAAM,sDAKPM,EAAa,SAACC,EAAMC,GAAP,OAAkB,SAAAhB,GAC1C,IAAMiB,EAAU,CACdF,OACAC,UAGFhB,EAASkB,+BAEThB,IACGiB,KAAK,YAAaF,GAClBb,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcL,EAASoB,4BAAkBf,OAC9CE,OAAM,SAAAC,GACLR,EAASqB,0BAAgBb,IAEK,MAA1BA,EAAME,SAASC,OACjBC,IAAMJ,MAAM,2BAEZI,IAAMJ,MAAM,sDAKPc,EAAgB,SAAAC,GAAS,OAAI,SAAAvB,GACxCA,EAASwB,kCAETtB,IACGuB,OADH,oBACuBF,IACpBnB,MAAK,kBAAMJ,EAAS0B,+BAAqBH,OACzChB,OAAM,SAAAC,GACLR,EAAS2B,6BAAmBnB,IAEE,MAA1BA,EAAME,SAASC,OACjBC,IAAMC,KAAK,uCACwB,MAA1BL,EAAME,SAASC,OACxBC,IAAMJ,MAAM,yCAEZI,IAAMJ,MAAM,sD,QCnEPoB,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OACtCC,EAAa,SAAAH,GAAK,OAAIA,EAAMC,SAASG,WACrCC,EAAW,SAAAL,GAAK,OAAIA,EAAMC,SAAStB,OACnC2B,EAAY,SAAAN,GAAK,OAAIA,EAAMC,SAASM,QAEpCC,EAAqBC,YAChC,CAACV,EAAaO,IACd,SAACL,EAAUM,GACT,IAAMG,EAAmBH,EAAOI,cAEhC,OAAOV,EAASM,QAAO,qBAAGrB,KACnByB,cAAcC,SAASF,S,sECkDnBG,MAvDf,WACE,IAAM1C,EAAW2C,cACXC,EAAkBC,YAAYC,EAAkBT,oBAChDP,EAAWe,YAAYC,EAAkBlB,aAE/C,OACE,qCACGE,EAASiB,OAAS,GACjB,cAAC,IAAOC,GAAR,CAAWC,UAAWC,IAAEC,KAAxB,SACE,cAAC,IAAD,UACGP,EAAgBQ,KAAI,gBAAGC,EAAH,EAAGA,GAAItC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACnB,eAAC,IAAOsC,GAAR,CACEL,UAAWC,IAAEK,KAEbjE,QAAQ,UACRE,QAAQ,UACRC,KAAK,OACLC,WAAW,aACXL,SAAUA,IAPZ,UASE,oBAAG4D,UAAWC,IAAErC,KAAhB,UACE,4BAAIE,IACJ,6BAAKC,OAEP,cAACwC,EAAA,EAAD,CACE,aAAW,SACXC,MAAM,YACNC,KAAK,SACLC,QAAS,kBAAM3D,EAAS4D,EAAmBtC,cAAc+B,KAJ3D,SAME,cAAC,IAAD,QAjBGA,WAyBbvB,EAASiB,QACT,cAAC,IAAD,UACE,cAAC,IAAOc,EAAR,CACEvE,QAAQ,UACRE,QAAQ,UACRC,KAAK,OACLC,WAAW,aACXL,SAAUA,IALZ,gE,qDC8DKyE,MArGf,WACE,IAAM9D,EAAW2C,cACXb,EAAWe,YAAYC,EAAkBlB,aACzCK,EAAYY,YAAYC,EAAkBd,YAChD,EAAwB+B,mBAAS,IAAjC,mBAAOhD,EAAP,KAAaiD,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAO/C,EAAP,KAAeiD,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBrD,EAAR,EAAQA,KAAMsD,EAAd,EAAcA,MAEd,OAAQtD,GACN,IAAK,OACHiD,EAAQK,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,SAgCAC,EAAa,WACjBN,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAMhB,UAAWC,IAAEqB,KAAMC,SApBN,SAAAL,GAEnB,OADAA,EAAEM,iBAfoB,SAAA1D,GACtB,OAAOe,EAAS4C,MACd,SAAAzD,GAAO,OAAIA,EAAQF,KAAKyB,gBAAkBzB,EAAKyB,iBAc7CmC,CAAgB5D,GACXH,YAAM,gBAAD,OAAOG,EAAP,kCAXU,SAAAC,GACxB,OAAOc,EAAS4C,MAAK,SAAAzD,GAAO,OAAIA,EAAQD,SAAWA,KAWxC4D,CAAkB5D,GACpBJ,YAAM,gBAAD,OAAOI,EAAP,kCATQ,SAACD,EAAMC,GAC7B,MAAuB,KAAhBD,EAAK8D,QAAmC,KAAlB7D,EAAO6D,OASzBC,CAAgB/D,EAAMC,GACxBJ,IAAMC,KAAK,4DAElBb,EAAS4D,EAAmB9C,WAAWC,EAAMC,SAE/CsD,MASA,UACE,wBAAOrB,UAAWC,IAAE6B,MAApB,iBAEE,uBACE9B,UAAWC,IAAE8B,MACbtB,KAAK,OACL3C,KAAK,OACLsD,MAAOtD,EACPkE,SAAUf,EACVgB,YAAY,kBAGhB,wBAAOjC,UAAWC,IAAE6B,MAApB,mBAEE,cAAC,IAAD,CACEG,YAAY,qBACZC,OAAO,kBACPC,KAAK,IACLC,QAAQ,yBACR3B,KAAK,MACL3C,KAAK,SACLsD,MAAOrD,EACPiE,SAAUf,EACVjB,UAAWC,IAAE8B,YAIf/C,GACA,cAACqD,EAAA,EAAD,CACEC,QAAQ,YACR9B,MAAM,YACN+B,KAAK,QACL9B,KAAK,SAJP,yBAUDzB,GAAa,cAACwD,EAAA,EAAD,Q,kBCrELC,MA9Bf,WACE,IAAM1F,EAAW2C,cACXP,EAASS,YAAYC,EAAkBX,WACvCL,EAAWe,YAAYC,EAAkBlB,aAE/C,OACE,mCACGE,EAASiB,OAAS,GACjB,cAAC,IAAD,UACE,uBAAOE,UAAWC,IAAE6B,MAApB,SACE,cAAC,IAAOC,MAAR,CACE1F,QAAQ,UACRE,QAAQ,UACRC,KAAK,OACLC,WAAW,aACXL,SAAUA,IACV4D,UAAWC,IAAE8B,MACbtB,KAAK,OACLW,MAAOjC,EACP6C,SAAU,SAAAd,GAAC,OACTnE,EAAS2F,EAAgBC,cAAczB,EAAEC,OAAOC,kB,kBClBjD,SAASwB,IACtB,IAAM7F,EAAW2C,cAIjB,OAFAmD,qBAAU,kBAAM9F,EAAS4D,EAAmB7D,mBAAkB,CAACC,IAG7D,sBAAKiD,UAAWC,IAAE6C,QAAlB,UACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD","file":"static/js/contacts-view.376bed96.chunk.js","sourcesContent":["export const variants = {\n  initial: { scale: 0 },\n  animate: { scale: 1 },\n  exit: { scale: 0 },\n  transition: { ease: 'easeOut', duration: 0.3 },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"info\":\"ContactList_info__DNDkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactsView_wrapper__CCOvq\"};","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\nimport { toast } from 'react-toastify';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => {\n      dispatch(fetchContactsError(error));\n\n      if (error.response.status === 404) {\n        toast.info(\"There is no such user's collection!\");\n      } else if (error.response.status === 500) {\n        toast.error('Oops! Server error! Please try later!');\n      } else {\n        toast.error('Something went wrong! Please reload the page!');\n      }\n    });\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => {\n      dispatch(addContactError(error));\n\n      if (error.response.status === 400) {\n        toast.error('Contact creation error!');\n      } else {\n        toast.error('Something went wrong! Please reload the page!');\n      }\n    });\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => {\n      dispatch(deleteContactError(error));\n\n      if (error.response.status === 404) {\n        toast.info(\"There is no such user's collection!\");\n      } else if (error.response.status === 500) {\n        toast.error('Oops! Server error! Please try later!');\n      } else {\n        toast.error('Something went wrong! Please reload the page!');\n      }\n    });\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { variants } from '../../utils/motionVar';\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <motion.ul className={s.list}>\n          <AnimatePresence>\n            {visibleContacts.map(({ id, name, number }) => (\n              <motion.li\n                className={s.item}\n                key={id}\n                initial=\"initial\"\n                animate=\"animate\"\n                exit=\"exit\"\n                transition=\"transition\"\n                variants={variants}\n              >\n                <p className={s.info}>\n                  <b>{name}</b>\n                  <em>{number}</em>\n                </p>\n                <IconButton\n                  aria-label=\"delete\"\n                  color=\"secondary\"\n                  type=\"button\"\n                  onClick={() => dispatch(contactsOperations.deleteContact(id))}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </motion.li>\n            ))}\n          </AnimatePresence>\n        </motion.ul>\n      )}\n\n      {!contacts.length && (\n        <AnimatePresence>\n          <motion.p\n            initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            transition=\"transition\"\n            variants={variants}\n          >\n            Your phonebook is empty. Please add contact.\n          </motion.p>\n        </AnimatePresence>\n      )}\n    </>\n  );\n}\n\nexport default ContactList;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport { toast } from 'react-toastify';\nimport NumberFormat from 'react-number-format';\nimport Button from '@material-ui/core/Button';\nimport LoaderComponent from '../LoaderComponent';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkRepeatNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === '' || number.trim() === '';\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (checkRepeatName(name)) {\n      return toast(`🤔 ${name} is already in the phonebook.`);\n    } else if (checkRepeatNumber(number)) {\n      return toast(`🤔 ${number} is already in the phonebook.`);\n    } else if (checkEmptyQuery(name, number)) {\n      return toast.info(\"😱 Enter the contact's name and number phone!\");\n    } else {\n      dispatch(contactsOperations.addContact(name, number));\n    }\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter name\"\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <NumberFormat\n          placeholder=\"Enter phone number\"\n          format=\"(###) ###-##-##\"\n          mask=\"_\"\n          pattern=\"^[0-9\\s\\(\\)\\-]{15}\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n\n      {!isLoading && (\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          type=\"submit\"\n        >\n          Add contact\n        </Button>\n      )}\n\n      {isLoading && <LoaderComponent />}\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { variants } from '../../utils/motionVar';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <AnimatePresence>\n          <label className={s.label}>\n            <motion.input\n              initial=\"initial\"\n              animate=\"animate\"\n              exit=\"exit\"\n              transition=\"transition\"\n              variants={variants}\n              className={s.input}\n              type=\"text\"\n              value={filter}\n              onChange={e =>\n                dispatch(contactsActions.filterContact(e.target.value))\n              }\n            />\n          </label>\n        </AnimatePresence>\n      )}\n    </>\n  );\n}\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ContactList from '../../components/ContactList';\nimport ContactForm from '../../components/ContactForm';\nimport Filter from '../../components/Filter';\nimport { contactsOperations } from '../../redux/contacts';\nimport s from './ContactsView.module.css';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <div className={s.wrapper}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"sourceRoot":""}